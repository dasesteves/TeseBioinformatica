const oracledb = require('oracledb');

const dbConfig = {
  user: 'PCE',
  password: 'PCE',
  connectString: '(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.21.105.16)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SID=ORCL)))'
};

async function descobrirCausaSimples() {
    let connection;
    
    try {
        console.log('=======================================================');
        console.log('DESCOBRINDO POR QUE FA10040790 N√ÉO DEDUZ STOCK');
        console.log('=======================================================\n');
        
        connection = await oracledb.getConnection(dbConfig);
        
        // 1. Verificar campo AFETA_STOCK
        console.log('1. CAMPO AFETA_STOCK DO FA10040790:\n');
        const afetaStock = await connection.execute(`
            SELECT CODIGO, DESC_C, AFETA_STOCK
            FROM PCE.PRF_MEDICAMENTOS
            WHERE CODIGO = 'FA10040790'
        `);
        
        const [cod, desc, afeta] = afetaStock.rows[0];
        console.log(`C√≥digo: ${cod}`);
        console.log(`Descri√ß√£o: ${desc}`);
        console.log(`AFETA_STOCK: ${afeta} ${afeta !== 1 ? '‚ùå PROBLEMA!' : '‚úì OK'}`);
        
        // 2. A DESCOBERTA CHAVE
        console.log('\n\n2. A DESCOBERTA CHAVE - DOIS FLUXOS DIFERENTES:\n');
        
        // Contar movimentos de farm√°cia vs enfermagem
        console.log('FA10040790:');
        const fa10040790 = await connection.execute(`
            SELECT 
                (SELECT COUNT(*) FROM PCE.PRF_PRESC_MOV_ENF WHERE CODIGO = 'FA10040790') as ENF,
                (SELECT COUNT(*) FROM PCE.PRF_PRESC_MOV_F pmf 
                 JOIN PCE.PRF_PRESC_MOV pm ON pmf.ID_PRESC_MOV = pm.ID_PRESC 
                 WHERE pm.CODIGO = 'FA10040790') as FARM,
                (SELECT COUNT(*) FROM PCE.CSU_EPENTIDADEACTOGASTOS WHERE CDU_CSU_ARTIGO = 'FA10040790') as CSU
            FROM DUAL
        `);
        
        const [enf1, farm1, csu1] = fa10040790.rows[0];
        console.log(`- Administra√ß√µes Enfermagem: ${enf1}`);
        console.log(`- Movimentos Farm√°cia: ${farm1} ‚ùå`);
        console.log(`- Registos CSU: ${csu1} ‚ùå`);
        
        console.log('\nFA10005405 (que funciona):');
        const fa10005405 = await connection.execute(`
            SELECT 
                (SELECT COUNT(*) FROM PCE.PRF_PRESC_MOV_ENF WHERE CODIGO = 'FA10005405') as ENF,
                (SELECT COUNT(*) FROM PCE.PRF_PRESC_MOV_F pmf 
                 JOIN PCE.PRF_PRESC_MOV pm ON pmf.ID_PRESC_MOV = pm.ID_PRESC 
                 WHERE pm.CODIGO = 'FA10005405') as FARM,
                (SELECT COUNT(*) FROM PCE.CSU_EPENTIDADEACTOGASTOS WHERE CDU_CSU_ARTIGO = 'FA10005405') as CSU
            FROM DUAL
        `);
        
        const [enf2, farm2, csu2] = fa10005405.rows[0];
        console.log(`- Administra√ß√µes Enfermagem: ${enf2}`);
        console.log(`- Movimentos Farm√°cia: ${farm2} ‚úì`);
        console.log(`- Registos CSU: ${csu2} ‚úì`);
        
        // 3. Quantos medicamentos t√™m este problema?
        console.log('\n\n3. QUANTOS MEDICAMENTOS T√äM ESTE PROBLEMA?\n');
        
        const problema = await connection.execute(`
            SELECT COUNT(DISTINCT CODIGO) as TOTAL
            FROM PCE.PRF_PRESC_MOV_ENF pme
            WHERE NOT EXISTS (
                SELECT 1 FROM PCE.CSU_EPENTIDADEACTOGASTOS 
                WHERE CDU_CSU_ARTIGO = pme.CODIGO
            )
            AND EXISTS (
                SELECT 1 FROM PCE.PRF_MEDICAMENTOS 
                WHERE CODIGO = pme.CODIGO AND AFETA_STOCK = 1
            )
        `);
        
        console.log(`Medicamentos com administra√ß√µes mas SEM dedu√ß√£o de stock: ${problema.rows[0][0]} ‚ùå`);
        
        // 4. EXPLICA√á√ÉO
        console.log('\n\n=======================================================');
        console.log('üí° EXPLICA√á√ÉO DO PROBLEMA');
        console.log('=======================================================\n');
        
        console.log('O SISTEMA TEM 2 CIRCUITOS:\n');
        
        console.log('CIRCUITO 1 - FARM√ÅCIA (deduz stock ‚úì):');
        console.log('1. M√©dico prescreve');
        console.log('2. Farm√°cia valida e dispensa ‚Üí PRF_PRESC_MOV_F');
        console.log('3. Sistema cria registo em CSU');
        console.log('4. Stock √© deduzido no SCMVV\n');
        
        console.log('CIRCUITO 2 - ENFERMAGEM (N√ÉO deduz stock ‚ùå):');
        console.log('1. M√©dico prescreve');
        console.log('2. Enfermagem administra direto ‚Üí PRF_PRESC_MOV_ENF');
        console.log('3. FIM (n√£o vai para CSU!)\n');
        
        console.log('O FA10040790 (Macrogol):');
        console.log('- √â um medicamento de STOCK DE SERVI√áO');
        console.log('- A enfermagem tem stock pr√≥prio no servi√ßo');
        console.log('- Administra direto sem passar pela farm√°cia');
        console.log('- Por isso NUNCA deduz do stock central!');
        
        console.log('\nüìä IMPACTO:');
        console.log(`- ${problema.rows[0][0]} medicamentos afetados`);
        console.log('- Milhares de administra√ß√µes sem controlo');
        console.log('- Stock central completamente desatualizado');
        
    } catch (err) {
        console.error('Erro:', err);
    } finally {
        if (connection) {
            try {
                await connection.close();
            } catch (err) {
                console.error('Erro ao fechar conex√£o:', err);
            }
        }
    }
}

// Executar
descobrirCausaSimples(); 